<?php

namespace App\Filament\Resources\InvoiceResource\Pages;

use App\Enums\OrderStatusEnum;
use App\Filament\Resources\InvoiceResource;
use App\Filament\Resources\UserResource;
use App\Models\Product;
use Filament\Actions;

use Filament\Resources\Pages\ListRecords;
use Filament\Tables\Actions\Action;
use Filament\Tables\Actions\ActionGroup;
use Filament\Tables\Columns\Layout\Grid;
use Filament\Tables\Columns\Layout\Panel;
use Filament\Tables\Columns\Layout\Split;
use Filament\Tables\Columns\Layout\Stack;
use Filament\Tables\Columns\Layout\View;
use Filament\Tables\Columns\TextColumn;
use Filament\Tables\Table;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;

class ShowInvoice extends ListRecords
{
    protected static string $resource = InvoiceResource::class;

    protected function getTableQuery(): ?Builder
    {

        return parent::getTableQuery()->latest(); // TODO: Change the autogenerated stub
    }

    public function table(Table $table): Table
    {
        return $table->columns([

            Panel::make([
                Split::make([
                    TextColumn::make('id'),
                    TextColumn::make('status')->formatStateUsing(fn($state)=>OrderStatusEnum::tryFrom($state)?->getLabel())->color(fn($state)=>OrderStatusEnum::tryFrom($state)?->getColor()),
                    TextColumn::make('created_at')->date('y-m-d'),
                ]),
                View::make('invoice.table.seller'),
//                View::make('invoice.table.user'),
                View::make('invoice.table.items'),
            ])/*->collapsible()->collapsed(fn($record)=>$record->status!='pending')*/

        ])
            ->actions([
                ActionGroup::make([
                   Action::make('take')->requiresConfirmation()->action(fn($record) => $record->update(['status' => OrderStatusEnum::AWAY->value]))->label('تأكيد إستلام البضاعة من التاجر')->visible(fn($record) => $record->status == OrderStatusEnum::AGREE->value),
                    Action::make('agree')->requiresConfirmation()->action(fn($record) => $record->update(['status' => OrderStatusEnum::AGREE->value]))->label('تأكيد موافقة التاجر')->visible(fn($record) => $record->status == OrderStatusEnum::PENDING->value),
                    Action::make('complete')->requiresConfirmation()->action(fn($record) => $record->update(['status' => OrderStatusEnum::COMPLETE->value]))->label('تأكيد تسليم الطلب للزبون')->visible(fn($record) => $record->status == OrderStatusEnum::AWAY->value),
                    Action::make('cancel')->requiresConfirmation()->action(fn($record) => $record->update(['status' => OrderStatusEnum::CANCELED->value]))->label('تأكيد إلغاء الطلب')->visible(fn($record) => $record->status != OrderStatusEnum::COMPLETE->value && $record->status != OrderStatusEnum::CANCELED->value),
                ])
            ]); // TODO: Change the autogenerated stub
    }
}
