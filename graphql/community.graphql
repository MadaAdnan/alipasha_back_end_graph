type Community{
    id:Int
    name:String
    manager:User
    type:String
    url:String
    users:[User] @field(resolver: "App\\GraphQL\\Resolvers\\CommunityUserResolve@users")
    users_count:Int
    last_update:HumanDate
   # created_at:HumanDate
}

extend type Query{
    getMyCommunity(search:String,first:Int,page:Int):[Community]  @paginate(builder:"App\\GraphQL\\Queries\\GetMyCommunity") @guard
    getMessages(communityId:Int!,first:Int,page:Int):[Message]  @paginate(builder:"App\\GraphQL\\Queries\\GetMessages") @guard
    getLiveCommunity:Community
}

extend type Mutation{
    createChat(memberId:Int!):Community @guard
    createGroup(name:String!):Community @guard
    createChannel(name:String!):Community @guard

}


type Message{
    community:Community @belongsTo
    user:User @belongsTo
    body:String
    type:String
    created_at:HumanDate
    attach:String @field(resolver: "App\\GraphQL\\Resolvers\\Image@getAttach")

}

extend type Mutation{
    CreateMessage(communityId:Int,body:String,attach:Upload):Message @guard
    createLiveMessage(communityId:Int,body:String!):Message @guard
}
