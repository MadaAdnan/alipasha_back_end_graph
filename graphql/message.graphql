extend type Query{
    messages(community_id:Int):[Message]  @guard  @paginate(builder:"App\\GraphQL\\Queries\\Messages")
    communities(search:String):[Community]  @guard @paginate(builder:"App\\GraphQL\\Queries\\Communities")
}


type Message{
    id:ID!
    user:User  @belongsTo
    community:Community @belongsTo
    message:String
    created_at:HumanDate
    attach:String @field(resolver: "App\\GraphQL\\Resolvers\\Image@getAttach")
}

type Community{
    id:ID!
    user:User  @belongsTo
    seller:User  @belongsTo
    last_change: HumanDate
    not_seen_count:Int @field(resolver: "App\\GraphQL\\Resolvers\\CommunityUnreadMessage@getUnreadMessage")

    created_at:CustomDate
}

extend type Mutation{
    createMessage(userId:Int,sellerId:Int,message:String,attach:Upload):Message @guard   @broadcast(subscription: "messageSentSubscription")
createCommunity(userId:Int!, sellerId:Int!):Community @guard
}
extend type Subscription {
    messageSentSubscription: Message

}

